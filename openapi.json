{
  "openapi": "3.1.0",
  "info": {
    "title": "Senior Project",
    "summary": "This is an API for a small hometown movie theater",
    "description": "This is created for a senior project for an applied technology degree from BYU-Idaho. It is built by Katrina Lyman with the needs of San Juan Theater in mind and under the supervision of Professor Blaine Robertson.",
    "contact": {
      "name": "Katrina Lyman",
      "email": "lymankatrina@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://sanjuantheater.onrender.com",
      "description": "Production server"
    },
    {
      "url": "http://localhost:8080",
      "description": "Development server"
    }
  ],
  "paths": {
    "/profile": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get Profile",
        "description": "This will return the authenticated user profile information for the current authenticated user.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/new": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "description": "Enter the required information to add a new user to the users collection",
        "responses": {
          "201": {
            "description": "New User created",
            "content": {
              "application/json": {
                "example": {
                  "_id": "uniqueId",
                  "firstName": "Horatio",
                  "lastName": "Crunch",
                  "userName": "Horatio Crunch",
                  "phone": "888-555-1234",
                  "email": "capncrunch@example.com",
                  "isAdmin": true
                }
              }
            }
          },
          "400": {
            "description": "Error message"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Failed to create a new user"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "firstName": "Horatio",
                "lastName": "Crunch",
                "userName": "Horatio Crunch",
                "phone": "888-555-1234",
                "email": "capncrunch@example.com",
                "isAdmin": true
              }
            }
          }
        }
      }
    },
    "/users/all": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "Get an array of all users in the collection",
        "responses": {
          "200": {
            "description": "A list of users.",
            "content": {
              "application/json": {
                "example": {
                  "_id": "uniqueId",
                  "firstName": "Horatio",
                  "lastName": "Crunch",
                  "userName": "Horatio Crunch",
                  "phone": "888-555-1234",
                  "email": "capncrunch@example.com",
                  "isAdmin": true
                }
              }
            }
          },
          "403": {
            "description": "Access denied"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get a user by ID",
        "description": "This will return a single user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "example": {
                  "_id": "uniqueId",
                  "firstName": "Horatio",
                  "lastName": "Crunch",
                  "userName": "Horatio Crunch",
                  "phone": "888-555-1234",
                  "email": "capncrunch@example.com",
                  "isAdmin": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    },
    "/users/update/{id}": {
      "put": {
        "tags": ["Users"],
        "summary": "Update a user by ID",
        "description": "This will update a single user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated",
            "content": {
              "application/json": {
                "example": {
                  "_id": "uniqueId",
                  "firstName": "Horatio",
                  "lastName": "Crunch",
                  "userName": "Horatio Crunch",
                  "phone": "888-555-1234",
                  "email": "capncrunch@example.com",
                  "isAdmin": true
                }
              }
            }
          },
          "304": {
            "description": "Not updated"
          },
          "400": {
            "description": "Error message"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "firstName": "Horatio",
                "lastName": "Crunch",
                "userName": "Horatio Crunch",
                "phone": "888-555-1234",
                "email": "capncrunch@example.com",
                "isAdmin": true
              }
            }
          }
        }
      }
    },
    "/users/delete/{id}": {
      "delete": {
        "tags": ["Users"],
        "summary": "Delete a user by ID",
        "description": "This will delete a single user by ID. This action cannot be reversed.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "User Successfully deleted"
          },
          "400": {
            "description": "User Not Deleted"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "User Not Found"
          },
          "500": {
            "description": "Error message"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Users": {
        "type": "object",
        "required": ["id", "firstName", "lastName", "userName", "phone", "email", "isAdmin"],
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectId"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "format": "###-###-####"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "isAdmin": {
            "type": "boolean"
          }
        }
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "tags": [
    {
      "name": "Users"
    }
  ],
  "externalDocs": {
    "description": "Find more info here",
    "url": "https://docs.example.com"
  }
}
